{"version":3,"sources":["Test.js","reportWebVitals.js","index.js"],"names":["Test","props","state","input","submit","toDoList","toDoDate","submitE","bind","changeE","event","this","setState","target","value","preventDefault","itemsArray","split","date","Date","toLocaleDateString","push","parentNode","remove","items","map","i","onClick","deleteE","className","onSubmit","onChange","type","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAuDeA,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,SAAU,IAEZ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBATE,E,2CAYnB,SAAQE,GACNC,KAAKC,SAAS,CACZT,MAAOO,EAAMG,OAAOC,U,qBAIxB,SAAQJ,GACNA,EAAMK,iBACN,IAAMC,EAAaL,KAAKT,MAAMC,MAAMc,MAAM,KACpCC,GAAO,IAAIC,MAAOC,qBACxBT,KAAKT,MAAMG,SAASgB,KAAK,CAACL,EAAY,MAAOE,IAE7CP,KAAKC,SAAS,CACZT,MAAO,GACPC,OAAQO,KAAKT,MAAMC,U,qBAKvB,SAAQO,GACNA,EAAMG,OAAOS,WAAWC,W,oBAG1B,WAAU,IAAD,OACDC,EAAQb,KAAKT,MAAMG,SAASoB,KAAI,SAAAC,GAAC,OAAI,8BAAYA,EAAZ,IAAe,wBAAQC,QAAS,EAAKC,QAASC,UAAU,aAAzC,oBAAf,MAAQH,MAEnD,OACE,sBAAKG,UAAU,OAAf,UACE,4CACA,uBAAMC,SAAUnB,KAAKJ,QAArB,UACE,uBAAOwB,SAAUpB,KAAKF,QAASK,MAAOH,KAAKT,MAAMC,QACjD,wBAAQ6B,KAAK,SAASH,UAAU,aAAhC,wBAEDL,S,GA9CUS,IAAMC,WCSVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82c8d8e3.chunk.js","sourcesContent":["import React from 'react';\nimport './Test.css';\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      submit: '',\n      toDoList: [],\n      toDoDate: []\n    };\n    this.submitE = this.submitE.bind(this);\n    this.changeE = this.changeE.bind(this);\n  }\n\n  changeE(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  submitE(event) {\n    event.preventDefault()\n    const itemsArray = this.state.input.split(',');\n    const date = new Date().toLocaleDateString()\n    this.state.toDoList.push([itemsArray, ' - ', date])\n\n    this.setState({\n      input: '', //input value가 초기화됨\n      submit: this.state.input\n\n    });\n  }\n\n  deleteE(event) {\n    event.target.parentNode.remove();\n  }\n\n  render() {\n    const items = this.state.toDoList.map(i => <p key={i}>{i} <button onClick={this.deleteE} className=\"delete_btn\">Delete</button> </p>);\n\n    return (\n      <div className=\"test\">\n        <h2>To Do List</h2>\n        <form onSubmit={this.submitE}>\n          <input onChange={this.changeE} value={this.state.input}></input>\n          <button type='submit' className=\"submit_btn\">Submit!</button>\n        </form>\n        {items}\n      </div >\n    );\n  }\n}\n\nexport default Test;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Test from './Test';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Test />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}